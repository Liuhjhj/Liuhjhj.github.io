<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="2021/03/23/di-gui/"/>
      <url>2021/03/23/di-gui/</url>
      
        <content type="html"><![CDATA[<h1 id="递归的理解以及运用"><a href="#递归的理解以及运用" class="headerlink" title="递归的理解以及运用"></a>递归的理解以及运用</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>位运算实现四则运算</title>
      <link href="2021/03/23/wei-yun-suan-shi-xian-si-ze-yun-suan/"/>
      <url>2021/03/23/wei-yun-suan-shi-xian-si-ze-yun-suan/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="位运算实现四则运算"><a href="#位运算实现四则运算" class="headerlink" title="位运算实现四则运算"></a>位运算实现四则运算</h2><h3 id="加法"><a href="#加法" class="headerlink" title="加法"></a>加法</h3><p>这个也同时是计算机内部加法器的原理</p><p>以6+5为例：</p><ol><li><p>不考虑进位：6+5=1 进行位异或操作 <strong>sum=a^b</strong> </p></li><li><p>只考虑进位：6+5=10 进行位与操作再把结果左移一位 <strong>carry=(a&amp;b)&lt;&lt;1</strong></p></li><li><p>循环将sum和carry相加，直到carry（进位）为0</p></li><li><p>输出sum为最终结果</p></li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">add_recursion</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> a<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">int</span> sum <span class="token operator">=</span> a<span class="token operator">^</span>b<span class="token punctuation">;</span> <span class="token comment">//异或</span>    <span class="token keyword">int</span> carry <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token operator">&amp;</span>b<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">//与</span>    <span class="token keyword">return</span> <span class="token function">add</span><span class="token punctuation">(</span>sum<span class="token punctuation">,</span>carry<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//递归</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> sum <span class="token operator">=</span> a<span class="token operator">^</span>b<span class="token punctuation">;</span>    <span class="token keyword">int</span> carry <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token operator">&amp;</span>b<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>carry <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> tmp_sum <span class="token operator">=</span> sum<span class="token punctuation">;</span>        <span class="token keyword">int</span> tmp_carry <span class="token operator">=</span> carry<span class="token punctuation">;</span>        sum <span class="token operator">=</span> tmp_sum<span class="token operator">^</span>tmp_carry<span class="token punctuation">;</span>        carry <span class="token operator">=</span> <span class="token punctuation">(</span>tmp_sum<span class="token operator">&amp;</span>tmp_carry<span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> sum<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="减法"><a href="#减法" class="headerlink" title="减法"></a>减法</h3><p>减法变加法</p><p>取反：位反再+1</p><p>再使用加法原理</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">subtract</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    b <span class="token operator">=</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token operator">~</span>b<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">add</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="乘法"><a href="#乘法" class="headerlink" title="乘法"></a>乘法</h3><p>先计算乘法的绝对值，再判断符号</p><p>思路跟平时做乘法打草稿是一样的</p><ol><li>判断末尾是否为1，如果为1，则把被乘数相加</li><li>把乘数右移一位</li><li>继续第一步，直到乘数为0</li></ol><p>任何数位与1等于末尾的二进制数（<strong>奇数&amp;1=1,偶数&amp;1=0</strong>）</p><p>判断符号：<strong>正数^负数=负数</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">multiply</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> multiplier <span class="token operator">=</span> a<span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">?</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token operator">~</span>a<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">:</span>a<span class="token punctuation">;</span><span class="token comment">//取绝对值</span>    <span class="token keyword">int</span> multiplicand <span class="token operator">=</span> b<span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">?</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token operator">~</span>b<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">:</span>b<span class="token punctuation">;</span><span class="token comment">//取绝对值</span>    <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>multiplicand<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//末尾为1相加,末尾为0什么都不做,思路类似于打草稿计算乘法</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>multiplicand <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            result<span class="token operator">+=</span>multiplier<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        multiplicand<span class="token operator">>>=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//左移1位</span>        multiplier<span class="token operator">&lt;&lt;=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//右移1位</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token operator">^</span>b<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//判断乘法的符号</span>        result <span class="token operator">=</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token operator">~</span>result<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> result<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="除法"><a href="#除法" class="headerlink" title="除法"></a>除法</h3><p>也是类似于打草稿的思路：</p><ol><li>将除数左移n位，n从0开始递增，直到除数达到小于被除数的最大值</li><li>用被除数减去除数，并把商的值加2^n</li><li>把n置为0，循环第一步，直到被除数小于除数</li><li>由于把除数左移有溢出风险，因此改为<strong>将被除数右移n位，n从31开始递减</strong></li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">divide</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> dividend <span class="token operator">=</span> a<span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">?</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token operator">~</span>a<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">:</span>a<span class="token punctuation">;</span>    <span class="token comment">//被除数</span>    <span class="token keyword">int</span> divisor <span class="token operator">=</span> b<span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">?</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token operator">~</span>b<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">:</span>b<span class="token punctuation">;</span> <span class="token comment">//除数</span>    <span class="token keyword">int</span> quotient <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>   <span class="token comment">//商</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">31</span><span class="token punctuation">;</span>i<span class="token operator">>=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">//int最大位数为32位</span>        <span class="token comment">//除数右移有溢出风险,因此用被除数左移来代替(除数从0位开始左移->被除数右移31位开始)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>dividend<span class="token operator">>></span>i<span class="token punctuation">)</span><span class="token operator">>=</span>divisor<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            quotient <span class="token operator">=</span> <span class="token function">add</span><span class="token punctuation">(</span>quotient<span class="token punctuation">,</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//商相加</span>            dividend <span class="token operator">=</span> <span class="token function">subtract</span><span class="token punctuation">(</span>dividend<span class="token punctuation">,</span>divisor<span class="token operator">&lt;&lt;</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//用被除数循环减去2^i倍的除数</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token operator">^</span>b<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        quotient <span class="token operator">=</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token operator">~</span>quotient<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> quotient<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 位运算 </tag>
            
            <tag> 四则运算 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
