<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>微博爬虫的使用教程</title>
      <link href="2021/03/28/wei-bo-pa-chong-de-shi-yong/"/>
      <url>2021/03/28/wei-bo-pa-chong-de-shi-yong/</url>
      
        <content type="html"><![CDATA[<hr><h1 id="微博爬虫的使用教程"><a href="#微博爬虫的使用教程" class="headerlink" title="微博爬虫的使用教程"></a><a href="https://github.com/dataabc/weiboSpider">微博爬虫</a>的使用教程</h1><h3 id="安装程序"><a href="#安装程序" class="headerlink" title="安装程序"></a>安装程序</h3><p>本程序提供两种安装方式，一种是<strong>源码安装</strong>，另一种是<strong>pip安装</strong>，二者功能完全相同。如果你需要修改源码，建议使用第一种方式，否则选哪种安装方式都可以。</p><ol><li><p><strong>源码安装</strong></p><p>可以使用git clone或直接从网页下载zip并解压到本地</p></li></ol><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">git clone https:&#x2F;&#x2F;github.com&#x2F;dataabc&#x2F;weiboSpider.git# 如果你需要之后使用Pycharm打开这个软件的项目,可暂时先不输入这条命令pip install -r requirements.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/blog_png/%E5%BE%AE%E5%8D%9A%E7%88%AC%E8%99%AB%E7%9A%84%E4%BD%BF%E7%94%A8/github%E4%B8%8B%E8%BD%BD.png" alt="点击红框下载"></p><ol start="2"><li><strong>pip安装</strong></li></ol><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">python3 -m pip install weibo-spider<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="打开项目"><a href="#打开项目" class="headerlink" title="打开项目"></a>打开项目</h3><p>以<strong>源码安装</strong>的方式才能打开项目，使用Pycharm可以打开本项目</p><p>可以在Pycharm的终端内运行此命令</p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">pip install -r requirements.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="程序设置"><a href="#程序设置" class="headerlink" title="程序设置"></a>程序设置</h3><p><strong>源码下载安装</strong>的用户在weiboSpider目录下运行如下命令，<strong>pip安装</strong>的用户在任意有写权限的目录运行如下命令：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">python3 -m weibo_spider<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或在<strong>Pycharm</strong>中直接运行spider.py内的主函数</p><p><img src="/blog_png/%E5%BE%AE%E5%8D%9A%E7%88%AC%E8%99%AB%E7%9A%84%E4%BD%BF%E7%94%A8/%E7%82%B9%E5%87%BB%E7%BB%BF%E8%89%B2%E7%AE%AD%E5%A4%B4%E8%BF%90%E8%A1%8C.png" alt="主函数"></p><p>第一次运行会生成config.json文件,并提示你需要配置它</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>    <span class="token property">"user_id_list"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"1669879400"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token comment">//你想爬取的微博用户的ID</span>    <span class="token property">"filter"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token comment">//控制爬取范围</span>    <span class="token property">"since_date"</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span><span class="token comment">//设置爬取的微博的日期范围,这个为开始日期</span>    <span class="token property">"end_date"</span><span class="token operator">:</span> <span class="token string">"now"</span><span class="token punctuation">,</span><span class="token comment">//这个为结束日期</span>    <span class="token property">"random_wait_pages"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token comment">//每爬取一定的页数暂停([1,5]表示每爬取1到5页暂停,页数是随机的)</span>    <span class="token property">"random_wait_seconds"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token comment">//设置暂停的时间间隔([6,10]表示暂停时长在这个范围,时间是随机的)</span>    <span class="token property">"global_wait"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">3600</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token comment">//全局暂停时间([1000,3600]表示每爬取1000页后暂停3600秒),与上面的暂停机制共存</span>    <span class="token property">"write_mode"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"mysql"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token comment">//设置如何保存爬取到的数据</span>    <span class="token property">"pic_download"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token comment">//是否下载图片</span>    <span class="token property">"video_download"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token comment">//是否下载视频</span><span class="token property">"file_download_timeout"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token property">"result_dir_name"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token comment">//设置保存结果的目录的名字(不包括路径)</span>    <span class="token property">"cookie"</span><span class="token operator">:</span> <span class="token string">"Cookie"</span><span class="token punctuation">,</span><span class="token comment">//设置Cookie</span>    <span class="token property">"mysql_config"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token comment">//配置mysql</span>        <span class="token property">"host"</span><span class="token operator">:</span> <span class="token string">"localhost"</span><span class="token punctuation">,</span>        <span class="token property">"port"</span><span class="token operator">:</span> <span class="token number">3306</span><span class="token punctuation">,</span>        <span class="token property">"user"</span><span class="token operator">:</span> <span class="token string">"root"</span><span class="token punctuation">,</span>        <span class="token property">"password"</span><span class="token operator">:</span> <span class="token string">"258196"</span><span class="token punctuation">,</span>        <span class="token property">"charset"</span><span class="token operator">:</span> <span class="token string">"utf8mb4"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token property">"kafka_config"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"bootstrap-server"</span><span class="token operator">:</span> <span class="token string">"127.0.0.1:9092"</span><span class="token punctuation">,</span>        <span class="token property">"weibo_topics"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"spider_weibo"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"user_topics"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"spider_weibo"</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token property">"sqlite_config"</span><span class="token operator">:</span> <span class="token string">"weibo.db"</span><span class="token comment">//配置sqlite</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>下面解释每个参数的含义与用法</p><h4 id="user-id-list"><a href="#user-id-list" class="headerlink" title="user_id_list"></a>user_id_list</h4><p>user_id_list是我们要爬取的微博的id，可以是一个，也可以是多个，例如：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"user_id_list"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"1223178222"</span><span class="token punctuation">,</span> <span class="token string">"1669879400"</span><span class="token punctuation">,</span> <span class="token string">"1729370543"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token comment">//上述代码代表我们要连续爬取user_id分别为“1223178222”、 “1669879400”、 “1729370543”的三个用户的微博</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>具体如何获取user_id：<a href="https://github.com/dataabc/weiboSpider/blob/master/docs/userid.md">点这里</a></p><p>user_id_list的值也可以是文件路径，我们可以把要爬的所有微博用户的user_id都写到txt文件里，然后把文件的位置路径赋值给user_id_list，<strong>推荐这种方式</strong>。<br>在txt文件中，每个user_id占一行，也可以在user_id后面加注释（可选），如用户昵称等信息，user_id和注释之间必需要有空格，文件名任意，类型为txt，位置位于本程序的同目录下，文件内容示例如下：</p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">1223178222 胡歌1669879400 迪丽热巴1729370543 郭碧婷<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>假如文件叫user_id_list.txt，则user_id_list设置代码为：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"user_id_list"</span><span class="token operator">:</span> <span class="token string">"user_id_list.txt"</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h4><p>filter控制爬取范围，值为1代表爬取全部原创微博，值为0代表爬取全部微博（原创+转发）。例如，如果要爬全部原创微博，请像下面代码一样设置：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token comment">//爬全部原创微博</span><span class="token property">"filter"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="since-date"><a href="#since-date" class="headerlink" title="since_date"></a>since_date</h4><p>since_date值可以是日期，也可以是整数。如果是日期，代表爬取该日期之后的微博，格式应为“yyyy-mm-dd”，</p><p>如：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"since_date"</span><span class="token operator">:</span> <span class="token string">"2018-01-01"</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>代表爬取从2018年1月1日到现在的微博。<br>如果是整数，代表爬取最近n天的微博，如：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token comment">//如果是日期应加上双引号,而数字没有双引号</span><span class="token property">"since_date"</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>代表爬取最近10天的微博，这个说法不是特别准确，准确说是爬取发布时间从<strong>10天前到本程序开始执行时</strong>之间的微博。</p><p><strong>since_date是所有user的爬取起始时间，非常不灵活。如果你要爬多个用户，并且想单独为每个用户设置一个since_date，可以使用<a href="https://github.com/dataabc/weiboSpider/blob/master/docs/automation.md">定期自动爬取微博</a>方法二中的方法，该方法可以为多个用户设置不同的since_date，非常灵活。</strong></p><h4 id="end-date"><a href="#end-date" class="headerlink" title="end_date"></a>end_date</h4><p>end_date值可以是日期，也可以是”now”。如果是日期，代表爬取该日期之前的微博，格式应为“yyyy-mm-dd”；如果是”now”，代表爬取发布日期从since_date到现在的微博。since_date配合end_date，表示爬取发布日期在since_date和end_date之间的微博，包含边界。since_date是起始日期，end_date是结束日期，因此end_date时间应晚于since_date。注意，since_date即可以通过config.json文件的since_date参数设置，也可以通过user_id_list.txt设置；而end_date只能通过config.json文件的end_date参数设置，是全局变量，所有user_id都使用同一个end_date。<br><strong>推荐使用”now”作为end_date值</strong>，当值为”now”时，获取结果是正确和稳定的；当end_date值不是”now”时，在爬微博数非常多的账号时，程序可能不稳定，得到很多空微博页，并且此时无法获取微博中的视频，如果想要获取视频，请为end_date赋值为”now”。</p><h4 id="random-wait-pages"><a href="#random-wait-pages" class="headerlink" title="random_wait_pages"></a>random_wait_pages</h4><p>random_wait_pages值是一个长度为2的整数列表，代表每爬取x页微博暂停一次，x为整数，值在random_wait_pages列表两个整数之间随机获取。默认值为[1, 5]，代表每爬取1到5页暂停一次，如果程序被限制，可以加快暂停频率，即适当减小random_wait_pages内的值。</p><h4 id="random-wait-seconds"><a href="#random-wait-seconds" class="headerlink" title="random_wait_seconds"></a>random_wait_seconds</h4><p>random_wait_seconds值是一个长度为2的整数列表，代表每次暂停sleep x 秒，x为整数， 值在random_wait_seconds列表两个整数之间随机获取。默认值为[6, 10]，代表每次暂停sleep 6到10秒，如果程序被限制，可以增加等待时间，即适当增大random_wait_seconds内的值。</p><h4 id="global-wait"><a href="#global-wait" class="headerlink" title="global_wait"></a>global_wait</h4><p>global_wait控制全局等待时间，默认值为[[1000, 3600], [500, 2000]]，代表获取1000页微博，程序一次性暂停3600秒；之后获取500页微博，程序再一次性暂停2000秒；之后如果再获取1000页微博，程序一次性暂停3600秒，以此类推。默认的只有前面的两个全局等待时间（[1000, 3600]和[500, 2000]），可以设置多个，如值可以为[[1000, 3600], [500, 3000], [700, 3600]]，程序会根据配置依次等待对应时间，如果配置全部被使用，程序会从第一个配置开始，依次使用，循环往复。</p><h4 id="write-mode"><a href="#write-mode" class="headerlink" title="write_mode"></a>write_mode</h4><p>write_mode控制爬虫的结果如何处理，取值范围是csv、txt、json、mongo、mysql和sqlite，分别代表将结果文件写入csv、txt、json、MongoDB、MySQL和SQLite数据库。write_mode可以同时包含这些取值中的一个或几个，如：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token comment">//表示将爬取的结果存入MySQL数据库的同时还写入本地的TXT文件</span><span class="token property">"write_mode"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"mysql"</span><span class="token punctuation">,</span> <span class="token string">"txt"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="pic-download"><a href="#pic-download" class="headerlink" title="pic_download"></a>pic_download</h4><p>pic_download控制是否下载微博中的图片，值为1代表下载，值为0代表不下载，如：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token comment">//不下载爬取到的微博图片</span><span class="token property">"pic_download"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="video-download"><a href="#video-download" class="headerlink" title="video_download"></a>video_download</h4><p>video_download控制是否下载微博中的视频，值为1代表下载，值为0代表不下载，如：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token comment">//下载爬取到的微博视频</span><span class="token property">"video_download"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="result-dir-name"><a href="#result-dir-name" class="headerlink" title="result_dir_name"></a>result_dir_name</h4><p>result_dir_name控制保存结果目录的<strong>名字</strong>(不包括目录的路径)，可选值为0和1，默认值为0：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"result_dir_name"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>值为0表示将结果文件保存在以用户昵称为名的文件夹里，这样结果更清晰；值为1表示将结果保存在以用户id为名的文件夹里，这样更能保证多次爬取的一致性，因为用户昵称可以改变，用户id是不变的。</p><h4 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h4><p>下面介绍如何获取Cookie</p><ol><li><p>用Chrome打开<a href="https://passport.weibo.cn/signin/login">微博</a></p><p><img src="https://camo.githubusercontent.com/50c7f33dbc7ebf32e1350e086906bca36ac0e9299688db73589465c87681a9d4/68747470733a2f2f706963747572652e636f676e697a652e6d652f636f676e697a652f6769746875622f776569626f7370696465722f636f6f6b6965312e706e67" alt="微博网页"></p></li><li><p>输入用户名和密码,并完成相应的验证(验证码验证和短信验证)</p></li><li><p>成功登录后会跳转到<a href="https://m.weibo.cn/">m.weibo.cn</a></p></li><li><p>按F12键打开Chrome开发者工具，在地址栏输入并跳转到<a href="https://weibo.cn/">weibo.cn</a>，跳转后会显示如下类似界面：</p><p><img src="/blog_png/%E5%BE%AE%E5%8D%9A%E7%88%AC%E8%99%AB%E7%9A%84%E4%BD%BF%E7%94%A8/Chrome.png" alt="Chrome"></p></li><li><p>按如图所示点击</p><p><img src="/blog_png/%E5%BE%AE%E5%8D%9A%E7%88%AC%E8%99%AB%E7%9A%84%E4%BD%BF%E7%94%A8/%E7%82%B9%E5%87%BB%E6%AD%A5%E9%AA%A4.png" alt="点击步骤"></p></li><li><p>复制如上图所示的Cookie,并粘贴到<strong>config.json</strong>里面，如：</p></li></ol><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"cookie"</span><span class="token operator">:</span> <span class="token string">"Your Cookie"</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="mysql-config"><a href="#mysql-config" class="headerlink" title="mysql_config"></a>mysql_config</h4><p>mysql_config控制mysql参数配置。如果你不需要将结果信息写入mysql，这个参数可以忽略，即删除或保留都无所谓；如果你需要写入mysql且config.json文件中mysql_config的配置与你的mysql配置不一样，请将该值改成你自己mysql中的参数配置。</p><p>需要安装pymysql包</p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">pip install pymysql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="sqlite-config"><a href="#sqlite-config" class="headerlink" title="sqlite_config"></a>sqlite_config</h4><p>sqlite_config控制SQLite参数配置，代表SQLite数据库的保存路径，可根据自己需求修改。</p><h3 id="运行程序"><a href="#运行程序" class="headerlink" title="运行程序"></a>运行程序</h3><p>如果你已经按照上面的步骤配置好了，则可以直接再一次运行程序，就能正常爬取微博数据了</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>位运算实现四则运算</title>
      <link href="2021/03/23/wei-yun-suan-shi-xian-si-ze-yun-suan/"/>
      <url>2021/03/23/wei-yun-suan-shi-xian-si-ze-yun-suan/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="位运算实现四则运算"><a href="#位运算实现四则运算" class="headerlink" title="位运算实现四则运算"></a>位运算实现四则运算</h2><h3 id="加法"><a href="#加法" class="headerlink" title="加法"></a>加法</h3><p>这个也同时是计算机内部加法器的原理</p><p>以6+5为例：</p><ol><li><p>不考虑进位：6+5=1 进行位异或操作 <strong>sum=a^b</strong> </p></li><li><p>只考虑进位：6+5=10 进行位与操作再把结果左移一位 <strong>carry=(a&amp;b)&lt;&lt;1</strong></p></li><li><p>循环将sum和carry相加，直到carry（进位）为0</p></li><li><p>输出sum为最终结果</p></li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">add_recursion</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> a<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">int</span> sum <span class="token operator">=</span> a<span class="token operator">^</span>b<span class="token punctuation">;</span> <span class="token comment">//异或</span>    <span class="token keyword">int</span> carry <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token operator">&amp;</span>b<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">//与</span>    <span class="token keyword">return</span> <span class="token function">add</span><span class="token punctuation">(</span>sum<span class="token punctuation">,</span>carry<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//递归</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> sum <span class="token operator">=</span> a<span class="token operator">^</span>b<span class="token punctuation">;</span>    <span class="token keyword">int</span> carry <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token operator">&amp;</span>b<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>carry <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> tmp_sum <span class="token operator">=</span> sum<span class="token punctuation">;</span>        <span class="token keyword">int</span> tmp_carry <span class="token operator">=</span> carry<span class="token punctuation">;</span>        sum <span class="token operator">=</span> tmp_sum<span class="token operator">^</span>tmp_carry<span class="token punctuation">;</span>        carry <span class="token operator">=</span> <span class="token punctuation">(</span>tmp_sum<span class="token operator">&amp;</span>tmp_carry<span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> sum<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="减法"><a href="#减法" class="headerlink" title="减法"></a>减法</h3><p>减法变加法</p><p>取反：位反再+1</p><p>再使用加法原理</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">subtract</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    b <span class="token operator">=</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token operator">~</span>b<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">add</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="乘法"><a href="#乘法" class="headerlink" title="乘法"></a>乘法</h3><p>先计算乘法的绝对值，再判断符号</p><p>思路跟平时做乘法打草稿是一样的</p><ol><li>判断末尾是否为1，如果为1，则把被乘数相加</li><li>把乘数右移一位</li><li>继续第一步，直到乘数为0</li></ol><p>任何数位与1等于末尾的二进制数（<strong>奇数&amp;1=1,偶数&amp;1=0</strong>）</p><p>判断符号：<strong>正数^负数=负数</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">multiply</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> multiplier <span class="token operator">=</span> a<span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">?</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token operator">~</span>a<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">:</span>a<span class="token punctuation">;</span><span class="token comment">//取绝对值</span>    <span class="token keyword">int</span> multiplicand <span class="token operator">=</span> b<span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">?</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token operator">~</span>b<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">:</span>b<span class="token punctuation">;</span><span class="token comment">//取绝对值</span>    <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>multiplicand<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//末尾为1相加,末尾为0什么都不做,思路类似于打草稿计算乘法</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>multiplicand <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            result<span class="token operator">+=</span>multiplier<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        multiplicand<span class="token operator">>>=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//左移1位</span>        multiplier<span class="token operator">&lt;&lt;=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//右移1位</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token operator">^</span>b<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//判断乘法的符号</span>        result <span class="token operator">=</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token operator">~</span>result<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> result<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="除法"><a href="#除法" class="headerlink" title="除法"></a>除法</h3><p>也是类似于打草稿的思路：</p><ol><li>将除数左移n位，n从0开始递增，直到除数达到小于被除数的最大值</li><li>用被除数减去除数，并把商的值加2^n</li><li>把n置为0，循环第一步，直到被除数小于除数</li><li>由于把除数左移有溢出风险，因此改为<strong>将被除数右移n位，n从31开始递减</strong></li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">divide</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> dividend <span class="token operator">=</span> a<span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">?</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token operator">~</span>a<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">:</span>a<span class="token punctuation">;</span>    <span class="token comment">//被除数</span>    <span class="token keyword">int</span> divisor <span class="token operator">=</span> b<span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">?</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token operator">~</span>b<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">:</span>b<span class="token punctuation">;</span> <span class="token comment">//除数</span>    <span class="token keyword">int</span> quotient <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>   <span class="token comment">//商</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">31</span><span class="token punctuation">;</span>i<span class="token operator">>=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">//int最大位数为32位</span>        <span class="token comment">//除数右移有溢出风险,因此用被除数左移来代替(除数从0位开始左移->被除数右移31位开始)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>dividend<span class="token operator">>></span>i<span class="token punctuation">)</span><span class="token operator">>=</span>divisor<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            quotient <span class="token operator">=</span> <span class="token function">add</span><span class="token punctuation">(</span>quotient<span class="token punctuation">,</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//商相加</span>            dividend <span class="token operator">=</span> <span class="token function">subtract</span><span class="token punctuation">(</span>dividend<span class="token punctuation">,</span>divisor<span class="token operator">&lt;&lt;</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//用被除数循环减去2^i倍的除数</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token operator">^</span>b<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        quotient <span class="token operator">=</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token operator">~</span>quotient<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> quotient<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 位运算 </tag>
            
            <tag> 四则运算 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
